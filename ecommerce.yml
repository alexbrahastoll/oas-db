openapi: 3.0.0
info:
  version: 1.0.0
  title: Ecommerce
  license:
    name: MIT
servers:
  - url: http://example.com/v1/api
paths:
  /orders:
    get:
      summary: List all orders of the authenticated user.
      operationId: list_orders
      tags:
        - orders
      responses:
        200:
          description: An array of orders
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Orders"
  /orders/{order_id}:
    post:
      summary: Shows a given order.
      operationId: show_order
      tags:
        - orders
      parameters:
        - name: order_id
          in: path
          required: true
          description: The id of an order.
          schema:
            type: integer
      responses:
        200:
          description: Details of an order.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
  /orders/{order_id}/items/{item_id}:
    get:
      summary: Shows an item of a given order.
      operationId: show_item
      tags:
        - items
      parameters:
        - name: order_id
          in: path
          required: true
          description: The id of an order.
          schema:
            type: integer
        - name: item_id
          in: path
          required: true
          description: The id of an item.
          schema:
            type: integer
      responses:
        200:
          description: An item belonging to an order.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
  /customers/{customer_token}:
    get:
      summary: Allows a partner to fetch profile info from a customer it has sold at least one product to.
      operationId: show_customer_by_token
      tags:
        - customer
      parameters:
        - name: customer_token
          in: path
          required: true
          description: A token that identifies a customer and gives access to its information.
          schema:
            type: string
      responses:
        200:
          description: Profile information of a customer.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
components:
  schemas:
    Order:
      description: An order.
      required:
        - id
        - name
      properties:
        id:
          description: The unique identifier of an order.
          type: integer
          format: int64
        name:
          description: The name of an order.
          type: string
        tag:
          description: The tag of an order.
          type: string
    Orders:
      description: A collection of orders.
      type: array
      items:
        $ref: "#/components/schemas/Order"
    Item:
      description: An item (e.g. instances of a product or service) belonging to an order.
      required:
        - id
        - name
        - qty
        - price
      properties:
        id:
          description: The unique identifier of an item.
          type: integer
          format: int64
        name:
          description: The name of an item.
          type: string
        qty:
          description: The number of items of this kind included in the order.
          type: integer
          format: int64
        price:
          description: The price of each unity of this item.
          type: number
          format: float
    Customer:
      description: Profile information of a customer.
      required:
        - name
        - date_of_birth
        - email
      properties:
        name:
          description: The full name of a customer.
          type: string
        date_of_birth:
          description: "The data of birth of a customer. Format: mm-dd-yyyy"
          type: string
        email:
          description: The email of a customer.
          type: string
